# This file was *autogenerated* from the file Timing.sage.
from sage.all_cmdline import *   # import sage library
_sage_const_2 = Integer(2); _sage_const_1 = Integer(1); _sage_const_0 = Integer(0); _sage_const_5 = Integer(5); _sage_const_4 = Integer(4); _sage_const_50000 = Integer(50000); _sage_const_0p25 = RealNumber('0.25'); _sage_const_200 = Integer(200); _sage_const_0p5 = RealNumber('0.5')
import time
import KTValues
import random
import csv
def timer():
    mu = [random.uniform(_sage_const_2 ,_sage_const_5 ) for e in range(_sage_const_2 )]
    c = [random.randint(_sage_const_2 ,_sage_const_4 ) for e in range(_sage_const_2 )]
    beta = [random.uniform(_sage_const_0p5 ,_sage_const_2 ) for e in range(_sage_const_2 )]

    for e in range(_sage_const_1 ,_sage_const_5 ):

        lmbda = (mu[_sage_const_0 ]*c[_sage_const_0 ]*e)/(_sage_const_5 )

        start = time.time()
        a = KTValues.Func(lmbda,mu,c,beta,_sage_const_200 ,[_sage_const_0p25 ,_sage_const_0p5 ,_sage_const_0p25 ],True,_sage_const_50000 ,True)
        end = time.time()

        n1,n2 = a[_sage_const_0 ],a[_sage_const_1 ]

        outfile = open('./out/timings.csv','ab')
        output = csv.writer(outfile)
        outrow = [lmbda,mu[_sage_const_0 ],mu[_sage_const_1 ],c[_sage_const_0 ],c[_sage_const_1 ],beta[_sage_const_0 ],beta[_sage_const_1 ],n1,n2,end-start]
        output.writerow(outrow)
        outfile.close()
while True:
    count = _sage_const_1 
    print "Trial %s" %count
    timer()
    count += _sage_const_1 
