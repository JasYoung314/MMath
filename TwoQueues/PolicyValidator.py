# This file was *autogenerated* from the file PolicyValidator.sage.
from sage.all_cmdline import *   # import sage library
_sage_const_100 = Integer(100); _sage_const_2 = Integer(2); _sage_const_1 = Integer(1); _sage_const_0 = Integer(0); _sage_const_100000 = Integer(100000)
import random


class Point():
    def __init__(self,initial_position_x = _sage_const_0 ,initial_position_y = _sage_const_0 ,Policy = False):
        self.pos = [initial_position_x,initial_position_y]
        self.Policy = Policy
        self.Dim = [Policy.nrows(),Policy.ncols()]
        self.value = Policy[self.pos[_sage_const_0 ]][self.pos[_sage_const_1 ]]
        self.Valid = True

    def Map(self,z):
        if z == _sage_const_1 :
            return -_sage_const_1 
        elif z == _sage_const_2 :
            return _sage_const_1 

    def Move(self):
        if self.value == _sage_const_0 :

            Queue = random.randint(_sage_const_0 ,_sage_const_1 )
            Movement = self.Map(random.randint(_sage_const_1 ,_sage_const_2 ))

        elif self.value == _sage_const_1 :
            Queue = random.randint(_sage_const_0 ,_sage_const_1 )
            if Queue == _sage_const_1 :
                Movement = -_sage_const_1 
            else:
                Movement = self.Map(random.randint(_sage_const_1 ,_sage_const_2 ))

        elif self.value == _sage_const_2 :
            Queue = random.randint(_sage_const_0 ,_sage_const_1 )
            Movement = -_sage_const_1 

        self.pos[Queue] = max(Movement+self.pos[Queue],_sage_const_0 )
        if self.pos[Queue] >= self.Dim[Queue]:
            self.Valid = False
            return

        self.value = self.Policy[self.pos[_sage_const_0 ]][self.pos[_sage_const_1 ]]

    def evaluate(self,iterations = _sage_const_100 ):
        k = _sage_const_0 
        while iterations > k and self.Valid:
            self.Move()
            k+=_sage_const_1 
        return self.Valid

Pol = matrix([[_sage_const_0 ,_sage_const_0 ,_sage_const_0 ,_sage_const_2 ,_sage_const_0 ,_sage_const_0 ,_sage_const_0 ,_sage_const_1 ],[_sage_const_0 ,_sage_const_0 ,_sage_const_0 ,_sage_const_0 ,_sage_const_0 ,_sage_const_0 ,_sage_const_0 ,_sage_const_1 ],[_sage_const_2 ,_sage_const_2 ,_sage_const_2 ,_sage_const_2 ,_sage_const_2 ,_sage_const_2 ,_sage_const_2 ,_sage_const_2 ]])

Test = Point(Policy = Pol)
print Test.evaluate(_sage_const_100000 )
