# This file was *autogenerated* from the file Ndata.sage.
from sage.all_cmdline import *   # import sage library
import StaticHeuristic
import TwoQueueVia3 as TwoQueueVia
import Simm
import csv
import random
import StaticPolicy

@parallel
def func(n):
    while True :
        lmbda = random.uniform(Integer(20),Integer(50))
        mu = [random.uniform(Integer(2),Integer(5)),random.uniform(Integer(2),Integer(5))]
        c = [random.randint(Integer(2),Integer(4)),random.randint(Integer(2),Integer(4))]
        skip = [random.uniform(RealNumber('0.5'),RealNumber('0.8')),random.uniform(RealNumber('0.5'),RealNumber('0.8'))]

        print lmbda
        print mu
        print c
        print skip
        static_pol = StaticPolicy.find_opt(lmbda,mu,c,skip)[Integer(0)]
        State = Simm.Func(lmbda,mu,c,skip,Integer(100),static_pol,False,Integer(500000),True,Integer(3600))[Integer(0)]

        outfile = open('./Static/MDP/Comparisons/out/Ndata/Ndata(%.02f,%s,%s,%s).csv' %(lmbda,mu,c,skip),'ab')
        output = csv.writer(outfile)
        outrow = []
        outrow.append(lmbda)
        outrow.append(mu[Integer(0)])
        outrow.append(mu[Integer(1)])
        outrow.append(c[Integer(0)])
        outrow.append(c[Integer(1)])
        outrow.append(skip[Integer(0)])
        outrow.append(skip[Integer(1)])

        output.writerow(outrow)

        for i in range(Integer(20)):
            for e in range(Integer(20)):
                outrow = [e,i,State['%s,%s' %(e,i)].expectedi2]
                output.writerow(outrow)

        outfile.close()


list(func([Integer(1),Integer(2),Integer(3),Integer(4),Integer(5),Integer(6),Integer(7)]))
