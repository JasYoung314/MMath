
R version 2.14.1 (2011-12-22)
Copyright (C) 2011 The R Foundation for Statistical Computing
ISBN 3-900051-07-0
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> N2data <- read.csv(file = "~/Dropbox/MMath/MDP/Comparisons/out/DataN2Simm.csv",head = FALSE)
> 
> N2data$win = ifelse(N2data$V17/N2data$V11 <= 1 ,1,0)
> N2data$S1 = N2data$V2 * N2data$V4
> N2data$S2 = N2data$V3 * N2data$V5
> N2data$Q = N2data$S1 / N2data$S2
> summary(N2data)
       V1              V2              V3              V4       
 Min.   :20.14   Min.   :2.002   Min.   :2.006   Min.   :2.000  
 1st Qu.:26.57   1st Qu.:2.815   1st Qu.:2.793   1st Qu.:2.000  
 Median :33.08   Median :3.535   Median :3.490   Median :3.000  
 Mean   :34.03   Mean   :3.544   Mean   :3.513   Mean   :2.974  
 3rd Qu.:41.07   3rd Qu.:4.327   3rd Qu.:4.256   3rd Qu.:4.000  
 Max.   :49.78   Max.   :4.989   Max.   :4.992   Max.   :4.000  
       V5              V6               V7               V8        
 Min.   :2.000   Min.   :0.5007   Min.   :0.5013   Min.   :0.5022  
 1st Qu.:2.000   1st Qu.:0.5673   1st Qu.:0.5710   1st Qu.:0.7936  
 Median :3.000   Median :0.6436   Median :0.6584   Median :0.8754  
 Mean   :3.014   Mean   :0.6453   Mean   :0.6512   Mean   :0.8719  
 3rd Qu.:4.000   3rd Qu.:0.7248   3rd Qu.:0.7290   3rd Qu.:0.9608  
 Max.   :4.000   Max.   :0.7996   Max.   :0.7997   Max.   :1.1907  
       V9        
 Min.   :0.5141  
 1st Qu.:0.7975  
 Median :0.8741  
 Mean   :0.8743  
 3rd Qu.:0.9550  
 Max.   :1.2048  
                                                                                                    V10     
 20 x 20 dense matrix over Integer Ring                                                               :613  
 20 x 20 dense matrix over Integer Ring (type 'print HeuristicPolicy.str()' to see all of the entries): 85  
                                                                                                            
                                                                                                            
                                                                                                            
                                                                                                            
      V11              V12        
 Min.   :0.4304   Min.   :0.4170  
 1st Qu.:0.7281   1st Qu.:0.7269  
 Median :0.8319   Median :0.8245  
 Mean   :0.8161   Mean   :0.8181  
 3rd Qu.:0.9060   3rd Qu.:0.9102  
 Max.   :1.1781   Max.   :1.1769  
                                                                                                V13     
 20 x 20 dense matrix over Integer Ring                                                           :613  
 20 x 20 dense matrix over Integer Ring (type 'print indepPolicy.str()' to see all of the entries): 85  
                                                                                                        
                                                                                                        
                                                                                                        
                                                                                                        
      V14              V15                                             V16     
 Min.   :0.3233   Min.   :0.3242   21 x 21 dense matrix over Integer Ring:698  
 1st Qu.:0.5890   1st Qu.:0.5848                                               
 Median :0.7046   Median :0.7058                                               
 Mean   :0.7001   Mean   :0.7011                                               
 3rd Qu.:0.8086   3rd Qu.:0.8069                                               
 Max.   :1.1725   Max.   :1.1703                                               
      V17              V18                                             V19     
 Min.   :0.4372   Min.   :0.4273   21 x 21 dense matrix over Integer Ring:698  
 1st Qu.:0.7274   1st Qu.:0.7300                                               
 Median :0.8446   Median :0.8364                                               
 Mean   :0.8192   Mean   :0.8207                                               
 3rd Qu.:0.9180   3rd Qu.:0.9139                                               
 Max.   :1.1855   Max.   :1.1713                                               
      win               S1               S2               Q         
 Min.   :0.0000   Min.   : 4.007   Min.   : 4.162   Min.   :0.2474  
 1st Qu.:0.0000   1st Qu.: 7.448   1st Qu.: 7.631   1st Qu.:0.6788  
 Median :0.0000   Median : 9.717   Median : 9.884   Median :1.0019  
 Mean   :0.3696   Mean   :10.561   Mean   :10.559   Mean   :1.1273  
 3rd Qu.:1.0000   3rd Qu.:13.444   3rd Qu.:13.725   3rd Qu.:1.4429  
 Max.   :1.0000   Max.   :19.958   Max.   :19.914   Max.   :3.5186  
> 
> reg <- glm(win ~ S1 + S2 + Q , data =N2data, family = "binomial")
> summary(reg)

Call:
glm(formula = win ~ S1 + S2 + Q, family = "binomial", data = N2data)

Deviance Residuals: 
    Min       1Q   Median       3Q      Max  
-2.1862  -0.7639  -0.4921   0.9205   2.3716  

Coefficients:
            Estimate Std. Error z value Pr(>|z|)    
(Intercept) -4.03413    0.71762  -5.622 1.89e-08 ***
S1           0.07650    0.05595   1.367    0.172    
S2           0.28125    0.05904   4.763 1.90e-06 ***
Q           -0.37743    0.54135  -0.697    0.486    
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 

(Dispersion parameter for binomial family taken to be 1)

    Null deviance: 919.62  on 697  degrees of freedom
Residual deviance: 735.52  on 694  degrees of freedom
AIC: 743.52

Number of Fisher Scoring iterations: 4

> 
> newdata1 <- with(N2data, data.frame( Q = mean(Q),S1 = mean(S1), S2 = mean(S2) ) )
> newdata1$rankP <- predict(reg, newdata = newdata1, type = "response")
> newdata2 <- with(N2data, data.frame(Q = rep(seq(from = 0.00000000001, to =1, length.out = 100),4),S1 = mean(S1),S2 = mean(S2) ) )
> newdata3 <- cbind(newdata2, predict(reg, newdata = newdata2, type = "link",se = TRUE))
> newdata3 <- within(newdata3, {
+     PredictedProb <- plogis(fit)
+     LL <- plogis(fit - (1.96 * se.fit))
+     UL <- plogis(fit + (1.96 * se.fit))
+ })
> 
> pdf('~/Dropbox/MMath/MDP/Comparisons/out/RegQ.pdf')
> plot(newdata3$Q,newdata3$PredictedProb)
> dev.off()
null device 
          1 
> 
> newdata1 <- with(N2data, data.frame( Q = mean(Q),S1 = mean(S1), S2 = mean(S2) ) )
> newdata1$rankP <- predict(reg, newdata = newdata1, type = "response")
> newdata2 <- with(N2data, data.frame(S1 = rep(seq(from = 1, to =40, length.out = 100),4),Q = mean(Q),S2 = mean(S2) ) )
> newdata3 <- cbind(newdata2, predict(reg, newdata = newdata2, type = "link",se = TRUE))
> newdata3 <- within(newdata3, {
+   PredictedProb <- plogis(fit)
+   LL <- plogis(fit - (1.96 * se.fit))
+   UL <- plogis(fit + (1.96 * se.fit))
+ })
> pdf('~/Dropbox/MMath/MDP/Comparisons/out/RegS1.pdf')
> plot(newdata3$S1,newdata3$PredictedProb)
> dev.off()
null device 
          1 
> 
> newdata1 <- with(N2data, data.frame( Q = mean(Q),S1 = mean(S1), S2 = mean(S2) ) )
> newdata1$rankP <- predict(reg, newdata = newdata1, type = "response")
> newdata2 <- with(N2data, data.frame(S2 = rep(seq(from = 1, to =40, length.out = 100),4),S1 = mean(S1),Q = mean(Q) ) )
> newdata3 <- cbind(newdata2, predict(reg, newdata = newdata2, type = "link",se = TRUE))
> newdata3 <- within(newdata3, {
+   PredictedProb <- plogis(fit)
+   LL <- plogis(fit - (1.96 * se.fit))
+   UL <- plogis(fit + (1.96 * se.fit))
+ })
> pdf('~/Dropbox/MMath/MDP/Comparisons/out/RegS2.pdf')
> plot(newdata3$S2,newdata3$PredictedProb)
> dev.off()
null device 
          1 
> 
> proc.time()
   user  system elapsed 
  0.408   0.004   0.424 
