# This file was *autogenerated* from the file NaorComparisons.sage.
from sage.all_cmdline import *   # import sage library
_sage_const_1 = Integer(1); _sage_const_0 = Integer(0); _sage_const_0p000000001 = RealNumber('0.000000001'); _sage_const_1p5 = RealNumber('1.5'); _sage_const_0p5 = RealNumber('0.5'); _sage_const_15 = Integer(15)
import numpy as np
import matplotlib.pyplot as plt
import Naor
import ValueIteration2
p = plot([])
Naorlist = []
MDPlist = []

for e in range(_sage_const_1 ,_sage_const_15 ):
    print ' ----- Testing lambda = %s -----' %e
    Testlmbda =e
    Testmu = [_sage_const_15 ]
    TestReward = [_sage_const_1p5 ]

    MDP = ValueIteration2.Queue(lmbda = Testlmbda , mu = Testmu[_sage_const_0 ] ,C = _sage_const_1 ,R = TestReward[_sage_const_0 ],epsilon = _sage_const_0p000000001 )
    MDPVal = MDP.ValueIter()[_sage_const_1 ]

    Woof = Naor.System(lmbda = Testlmbda,mu = Testmu,beta = TestReward)
    Naor.NaorCalc(Woof)
    OptPolicy = Woof.Threshold[_sage_const_0 ]

    Naorlist.append(OptPolicy)
    MDPlist.append(MDPVal)

    if OptPolicy == MDPVal:
        print 'Win'
    else:
        print 'loss'

N = len(Naorlist)
ind = np.arange(N)  # the x locations for the groups
width = _sage_const_0p5        # the width of the bars

fig, ax = plt.subplots()
rects1 = ax.bar(ind, MDPlist, width, color='r')

#rects2 = ax.bar(ind+width, Naorlist, width, color='b')

ax.set_ylabel('Threshold')
ax.set_xlabel(' $ \\lambda $ ')
ax.set_xticks(ind)
xtick = [e + _sage_const_1  for e in range(N)]
ax.set_xticklabels( xtick )

#ax.legend( (rects1[0] ), ('MDP') )
plt.savefig('./out/NaorComp/%s,%s.pdf' %(Testmu[_sage_const_0 ],TestReward[_sage_const_0 ]))
